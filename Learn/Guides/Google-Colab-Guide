---
title: Cloud Notebooks with Google Colab
author: 
  - name: Aidan O'Brien
    email: aobrien26@wisc.edu
date: 2024-07-11
date-format: long
image: "../../../images/colab-logo.png"
categories:
  - Guides
  - Cloud computing
  - Jupyter
---

## About this resource
Google Colab has emerged as one of the most accessible platforms for running Jupyter notebooks in the cloud, 
particularly for machine learning and data science workflows. This guide provides a comprehensive overview of Colab's capabilities, 
limitations, and best practices for both beginners and experienced users. We'll compare Colab with alternative solutions like AWS SageMaker 
and UW-Madison's CHTC resources, helping you determine the right tool for your computational needs.

### Key features
- **Zero-configuration Jupyter environment**: Instant access to Python notebooks without local installation
- **Free compute resources**: Includes CPU, GPU, and TPU options
- **Google Drive integration**: Easy saving and loading of notebooks
- **Collaboration features**: Real-time co-editing similar to Google Docs
- **Pre-installed libraries**: Includes most major ML frameworks (TensorFlow, PyTorch, etc.)

### Essential terminology
Before diving into Colab, let's clarify some key concepts:

* **Notebook**: An interactive document combining code, visualizations, and narrative text
* **Runtime**: The computing environment where your notebook executes
* **GPU (Graphics Processing Unit)**: Specialized processor for accelerating mathematical computations
* **TPU (Tensor Processing Unit)**: Google's custom ASIC designed specifically for machine learning workloads
* **Session**: A single continuous period of notebook activity
* **Drive storage**: Persistent cloud storage linked to your Google account
* **Mounting**: Connecting your Drive storage to a Colab session

## Setup and basic usage

### Accessing Colab
1. Visit [colab.research.google.com](https://colab.research.google.com/)
2. Sign in with your Google account
3. Choose to create a new notebook or open an existing one from Drive/GitHub

### Runtime configuration
1. Click "Runtime" â†’ "Change runtime type"
2. Select hardware accelerator (None, GPU, or TPU) as needed
3. Choose Python version (typically defaults to latest stable version)

### Saving your work
Colab automatically saves to your Google Drive in the "Colab Notebooks" folder. For additional security:
1. Click "File" â†’ "Save a copy in Drive"
2. Periodically download important notebooks ("File" â†’ "Download")

### Installing additional packages
While Colab comes with many pre-installed packages, you can add others with:
```python
!pip install package-name


## 1. Colab Pros

- Colab is essentially a Jupyter notebook in the cloud, run on Googleâ€™s servers â€” no local setup required.
- Free access to GPUs/TPUs for quick experiments.
- Easy sharing and collaboration; integrates seamlessly with Google Drive.

## 2. Colab Cons

- Limited session durations and automatic disconnection after idle time.
- Shared compute resources â€” GPU/TPU access may be throttled.
- No persistent storage; data is lost once the session ends.
- Not well-suited for long-term or large-scale machine learning workflows.

## 3. Freemium Tiers

- **Free tier**: Best for short-term experiments or learning environments.
- **Pro ($9.99/month)**: Greater access to compute resources; good for moderate workloads.
- **Pro+ ($49.99/month)**: Designed for high-demand workflows requiring more stable, faster GPU/TPU access.

> ðŸ’¡ While a Pro+ subscription provides convenience, many ML/AI workloads can be run on AWS for less than $50/month â€” making it a compelling alternative if you need persistent compute and more control.

## 4. When to Use Colab vs. AWS/CHTC

- **Use Colab** for:
  - Quick testing and prototyping
  - Learning and teaching ML/AI
  - Small-scale experiments

- **Use AWS SageMaker** for:
  - Complex ML workflows and large-scale experimentation
  - High-throughput training (e.g., parallel hyperparameter tuning)
  - Research use cases that demand scalability, versioning, and control

- **Use CHTC (UW-Madison only)** for:
  - Free, persistent GPU compute
  - Long-running training tasks on high-performance infrastructure

## Related Links

- [Intro to AWS SageMaker for Predictive ML/AI](https://aws.amazon.com/sagemaker/)
- [Run machine learning jobs on CHTC â€” GPUs available](https://chtc.cs.wisc.edu/uw-research-computing.html)
